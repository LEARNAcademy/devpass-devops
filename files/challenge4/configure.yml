- hosts: tag_type_nginx 
  gather_facts: no
  pre_tasks:
    - name: 'install python2'
      raw: sudo apt-get -y install python-simplejson

- name: Configure instance(s)
  hosts: tag_type_nginx
  become: True
  gather_facts: True
  tasks:
    - name: update apt cache
      become: yes
      package: update_cache=yes
    
    - name: install aptitude
      # on Debian Jessie aptitude is not installed by default, without it apt-get upgrade fails
      become: yes
      package: name=aptitude state=installed
    
    # - name: upgrade apt packages
    #   become: yes
    #   package: upgrade=full
    
    - name: install dev tools and libraries
      become: yes
      package: name={{ item }} state=installed
      with_items:
        - build-essential
        - composer
        - curl
        - git
        - libpq-dev
        - libreadline6
        - libreadline6-dev
        - libssl-dev
        - mysql-client
        - mysql-server
        - nginx
        - nodejs
        - npm
        - openssl
        - php7.0-dom
        - php7.0-mbstring
        - php7.0-mysql
        - python-mysqldb
        - unzip
        - zip
        - zlib1g
        - zlib1g-dev

- name: Install Node App
  hosts: tag_group_a
  gather_facts: True
  tasks:
    - name: chmod /var/www
      file: dest=/var/www owner=root group=adm mode=u=rwX,g=rwX recurse=yes
      become: yes
    - name: clone node app
      git:
        repo: 'https://github.com/LEARNAcademy/http-status-cats-api.git'
        dest: '/var/www/html/webapp'
        version: master
    - name: npm
      shell: 'npm install'
      args:
        chdir: '/var/www/html/node_cats'
    - copy: src=./files/cats.service dest=/etc/systemd/system/node_cats.service owner=root group=root
      become: yes
    - name: start node
      systemd: state=started name=node_cats daemon_reload=yes
      become: yes


- name: Install Rails App
  hosts: tag_group_a
  gather_facts: True
  roles:
    - { role: rvm_io.ruby,
        tags: ruby,
        rvm1_rubies: ['ruby-2.3.7', 'ruby-2.4.1'],
        rvm1_user: 'ubuntu'
      }
  tasks:
    - name: chmod /var/www
      file: dest=/var/www owner=root group=adm mode=u=rwX,g=rwX recurse=yes
      become: yes
    - name: clone rails app
      git:
        repo: 'https://github.com/LEARNAcademy/learn-rails.git'
        dest: '/var/www/html/learn-rails'
        version: master
    - name: bundle
      shell: '/home/ubuntu/.rvm/wrappers/ruby-2.4.1/bundle'
      args:
        chdir: '/var/www/html/learn-rails'
    - copy: src=./files/rails.service dest=/etc/systemd/system/rails.service owner=root group=root
      become: yes
    - name: start rails
      systemd: state=started name=rails daemon_reload=yes
      become: yes

- name: Install PHP App
  hosts: tag_group_a
  gather_facts: true
  tasks:
    - name: clone laravel app
      git:
        repo: 'https://github.com/laravel/quickstart-basic.git'
        dest: '/var/www/html/quickstart'
        version: master
        force: yes
      creates: '/var/www/html/quickstart'
    - copy: src=./files/laravel-env dest=/var/www/html/quickstart/.env owner=ubuntu group=adm
      become: yes
    - name: Create a new database with name 'homestead'
      mysql_db:
        name: homestead
        state: present
      become: yes
    - name: Fix permissions
      shell: "mysql -uroot -e \"use mysql; update user set authentication_string=password(''), plugin='mysql_native_password' where user='root'; flush privileges;\""
      become: yes
    - name: composer install
      shell: 'composer install'
      args:
        chdir: '/var/www/html/quickstart'
    - name: migrate database
      shell: 'php artisan migrate'
      args:
        chdir: '/var/www/html/quickstart'
    - copy: src=./files/laravel.service dest=/etc/systemd/system/laravel.service owner=root group=root
      become: yes
    - name: start laravel
      systemd: state=started name=laravel daemon_reload=yes
      become: yes
   
- name: Proxy config 
  hosts: tag_group_a
  gather_facts: True
  tasks: 
    - copy: src=./files/apps.conf dest=/etc/nginx/sites-available/default owner=root group=root
      become: yes
    - name: restart nginx
      become: yes
      service: name=nginx enabled=yes state=restarted

